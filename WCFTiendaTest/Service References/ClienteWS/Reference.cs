//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFTiendaTest.ClienteWS {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cliente", Namespace="http://schemas.datacontract.org/2004/07/WCFTiendaServices.Dominio")]
    [System.SerializableAttribute()]
    public partial class Cliente : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nu_rucField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string tx_direccionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string tx_nombreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nu_ruc {
            get {
                return this.nu_rucField;
            }
            set {
                if ((object.ReferenceEquals(this.nu_rucField, value) != true)) {
                    this.nu_rucField = value;
                    this.RaisePropertyChanged("nu_ruc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tx_direccion {
            get {
                return this.tx_direccionField;
            }
            set {
                if ((object.ReferenceEquals(this.tx_direccionField, value) != true)) {
                    this.tx_direccionField = value;
                    this.RaisePropertyChanged("tx_direccion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tx_nombre {
            get {
                return this.tx_nombreField;
            }
            set {
                if ((object.ReferenceEquals(this.tx_nombreField, value) != true)) {
                    this.tx_nombreField = value;
                    this.RaisePropertyChanged("tx_nombre");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClienteInexistenteError", Namespace="http://schemas.datacontract.org/2004/07/WCFTiendaServices.Errores")]
    [System.SerializableAttribute()]
    public partial class ClienteInexistenteError : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodigoErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MensajeErrorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CodigoError {
            get {
                return this.CodigoErrorField;
            }
            set {
                if ((this.CodigoErrorField.Equals(value) != true)) {
                    this.CodigoErrorField = value;
                    this.RaisePropertyChanged("CodigoError");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MensajeError {
            get {
                return this.MensajeErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.MensajeErrorField, value) != true)) {
                    this.MensajeErrorField = value;
                    this.RaisePropertyChanged("MensajeError");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ClienteWS.IClienteService")]
    public interface IClienteService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteService/CrearCliente", ReplyAction="http://tempuri.org/IClienteService/CrearClienteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WCFTiendaTest.ClienteWS.ClienteInexistenteError), Action="http://tempuri.org/IClienteService/CrearClienteClienteInexistenteErrorFault", Name="ClienteInexistenteError", Namespace="http://schemas.datacontract.org/2004/07/WCFTiendaServices.Errores")]
        WCFTiendaTest.ClienteWS.Cliente CrearCliente(WCFTiendaTest.ClienteWS.Cliente clienteACrear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteService/CrearCliente", ReplyAction="http://tempuri.org/IClienteService/CrearClienteResponse")]
        System.Threading.Tasks.Task<WCFTiendaTest.ClienteWS.Cliente> CrearClienteAsync(WCFTiendaTest.ClienteWS.Cliente clienteACrear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteService/ObtenerCliente", ReplyAction="http://tempuri.org/IClienteService/ObtenerClienteResponse")]
        WCFTiendaTest.ClienteWS.Cliente ObtenerCliente(string nu_ruc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteService/ObtenerCliente", ReplyAction="http://tempuri.org/IClienteService/ObtenerClienteResponse")]
        System.Threading.Tasks.Task<WCFTiendaTest.ClienteWS.Cliente> ObtenerClienteAsync(string nu_ruc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteService/ModificarCliente", ReplyAction="http://tempuri.org/IClienteService/ModificarClienteResponse")]
        WCFTiendaTest.ClienteWS.Cliente ModificarCliente(WCFTiendaTest.ClienteWS.Cliente clienteAModificar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteService/ModificarCliente", ReplyAction="http://tempuri.org/IClienteService/ModificarClienteResponse")]
        System.Threading.Tasks.Task<WCFTiendaTest.ClienteWS.Cliente> ModificarClienteAsync(WCFTiendaTest.ClienteWS.Cliente clienteAModificar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteService/EliminarCliente", ReplyAction="http://tempuri.org/IClienteService/EliminarClienteResponse")]
        void EliminarCliente(WCFTiendaTest.ClienteWS.Cliente clienteAEliminar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteService/EliminarCliente", ReplyAction="http://tempuri.org/IClienteService/EliminarClienteResponse")]
        System.Threading.Tasks.Task EliminarClienteAsync(WCFTiendaTest.ClienteWS.Cliente clienteAEliminar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteService/ListarClientes", ReplyAction="http://tempuri.org/IClienteService/ListarClientesResponse")]
        WCFTiendaTest.ClienteWS.Cliente[] ListarClientes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteService/ListarClientes", ReplyAction="http://tempuri.org/IClienteService/ListarClientesResponse")]
        System.Threading.Tasks.Task<WCFTiendaTest.ClienteWS.Cliente[]> ListarClientesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClienteServiceChannel : WCFTiendaTest.ClienteWS.IClienteService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClienteServiceClient : System.ServiceModel.ClientBase<WCFTiendaTest.ClienteWS.IClienteService>, WCFTiendaTest.ClienteWS.IClienteService {
        
        public ClienteServiceClient() {
        }
        
        public ClienteServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClienteServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClienteServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClienteServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCFTiendaTest.ClienteWS.Cliente CrearCliente(WCFTiendaTest.ClienteWS.Cliente clienteACrear) {
            return base.Channel.CrearCliente(clienteACrear);
        }
        
        public System.Threading.Tasks.Task<WCFTiendaTest.ClienteWS.Cliente> CrearClienteAsync(WCFTiendaTest.ClienteWS.Cliente clienteACrear) {
            return base.Channel.CrearClienteAsync(clienteACrear);
        }
        
        public WCFTiendaTest.ClienteWS.Cliente ObtenerCliente(string nu_ruc) {
            return base.Channel.ObtenerCliente(nu_ruc);
        }
        
        public System.Threading.Tasks.Task<WCFTiendaTest.ClienteWS.Cliente> ObtenerClienteAsync(string nu_ruc) {
            return base.Channel.ObtenerClienteAsync(nu_ruc);
        }
        
        public WCFTiendaTest.ClienteWS.Cliente ModificarCliente(WCFTiendaTest.ClienteWS.Cliente clienteAModificar) {
            return base.Channel.ModificarCliente(clienteAModificar);
        }
        
        public System.Threading.Tasks.Task<WCFTiendaTest.ClienteWS.Cliente> ModificarClienteAsync(WCFTiendaTest.ClienteWS.Cliente clienteAModificar) {
            return base.Channel.ModificarClienteAsync(clienteAModificar);
        }
        
        public void EliminarCliente(WCFTiendaTest.ClienteWS.Cliente clienteAEliminar) {
            base.Channel.EliminarCliente(clienteAEliminar);
        }
        
        public System.Threading.Tasks.Task EliminarClienteAsync(WCFTiendaTest.ClienteWS.Cliente clienteAEliminar) {
            return base.Channel.EliminarClienteAsync(clienteAEliminar);
        }
        
        public WCFTiendaTest.ClienteWS.Cliente[] ListarClientes() {
            return base.Channel.ListarClientes();
        }
        
        public System.Threading.Tasks.Task<WCFTiendaTest.ClienteWS.Cliente[]> ListarClientesAsync() {
            return base.Channel.ListarClientesAsync();
        }
    }
}
